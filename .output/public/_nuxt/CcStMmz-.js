import{a as s,c as o}from"./DUXXyp4T.js";const t=s().required("Enter your password").min(8,"Password should be at least 8 characters long").matches(/[0-9]/,"Password should contain at least one number").matches(/[a-z]/,"Password should contain at least one lowercase letter").matches(/[A-Z]/,"Password should contain at least one uppercase letter").matches(/[!@#$%^&*(),.?":{}|<>]/,"Password should contain at least a special character"),d=o({name:s().optional().min(3,"Name should be at least 3 characters long"),email:s().required("Email is required").email("Enter a valid email"),password:t}),i=o({name:s().optional().min(3,"Name should be at least 3 characters long"),email:s().required("Email is required").email("Enter a valid email"),stage_name:s().required("Stage name is required").min(2,"Stage name should be at least 2 characters long"),profession:s().required("Profession is required"),password:t}),c=o({password:t,password_confirmation:s().required("Confirm password")}).test("confirmation-test","",(e,a)=>{const r=a.createError({path:"password_confirmation",message:"Password don't match"});return e.password===e.password_confirmation?!0:r}),m=o({old_password:s().required("Old password required"),password:t,password_confirmation:s().required("Confirm password")}).test("new-password-test","",(e,a)=>{const r=a.createError({path:"password",message:"New password should not be same as old password"});return e.old_password===e.password?r:!0}).test("confirmation-test","",(e,a)=>{const r=a.createError({path:"password_confirmation",message:"Password don't match"});return e.password===e.password_confirmation?!0:r});export{d as A,m as C,i as H,c as R};
