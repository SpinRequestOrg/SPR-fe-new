import{f as y,r as d,x as f,s as o}from"./B2Nt2AJp.js";const $=()=>{const{$repo:{event:r},$config:{public:{APP_BASE_URL:g}}}=y(),c=d(!1),i=d(null),v=d(!1),u=d(!1);return{fetchEventRequests:async t=>await r.getEventRequests(t),endEvent:async t=>{var n;try{c.value=!0;const e=await r.endEvent(t);c.value=!1,e.data&&f(`/events/${t}/event-earnings`)}catch(e){c.value=!1,o({title:((n=e==null?void 0:e.data)==null?void 0:n.message)??"Failed to end event",variant:"warning"})}},ending:c,updateEventRequest:async(t,n,e)=>{var l;try{i.value=n,v.value=!0;const a=await r.updateEventRequest(t,n);o({title:a.message??"Updated"}),v.value=!1,i.value=null,a.data&&(e==null||e())}catch(a){i.value=null,v.value=!1,o({title:((l=a==null?void 0:a.data)==null?void 0:l.message)??"Failed to update event",variant:"warning"})}},update_status:i,updating:v,createEventRequest:async(t,n)=>{var e,l,a;try{u.value=!0;const s=await r.createRequest(t),E={redirect_url:`${g}/${n}/${t.event_id}/${s.data.id}/request-receipt`,type:"gateway",gateway:"paystack"};if(!Number(s.data.price))return u.value=!1,f(`/${(l=(e=s.data)==null?void 0:e.host)==null?void 0:l.slug}`);const p=await r.payForRequest(E,s.data.id);u.value=!1,p.data.redirect_url&&await f(p.data.redirect_url,{external:!0})}catch(s){u.value=!1,o({title:((a=s==null?void 0:s.data)==null?void 0:a.message)??"Failed to create request",variant:"warning"})}},creating:u}};export{$ as u};
